<OMOP CDM 맞춤 CLEAR 알고리듬 소스 코드>



-데이터 생성 SQL 코드

--조사대상 약물의 exposed 그룹을 생성
IF OBJECT_ID('#exposed1', 'U') IS NOT NULL
drop table #exposed1
select * into #exposed_step1 from (
SELECT d.PERSON_ID, 
       d.DRUG_CONCEPT_ID, 
       d.DRUG_EXPOSURE_START_DATE, 
       COALESCE(d.DRUG_EXPOSURE_END_DATE, DATEADD(dd,d.DAYS_SUPPLY,d.DRUG_EXPOSURE_START_DATE), DATEADD(dd,1,d.DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE,
	  ROW_NUMBER()OVER(PARTITION BY d.PERSON_ID ORDER BY DRUG_EXPOSURE_START_DATE) AS rn
FROM
     dbo.DRUG_EXPOSURE d where d.DRUG_CONCEPT_ID IN (‘OMOP concept ID')
)V

--약처방 첫번째 날짜만을 가지고 옴
drop table #exposed_step2
select * into #exposed_step2 from (select * from #exposed_step1 where rn=1) v


SELECT * INTO #exposed_step3
FROM(
     SELECT observation_id, 
            person_id, 
            observation_concept_id, 
            observation_date, 
            value_as_number, 
            range_low, 
            range_high, 
            fg = CASE
                 WHEN value_as_number BETWEEN range_low AND range_high 
                                                       THEN 'N'
                 WHEN value_as_number > range_high THEN 'H'
                 WHEN value_as_number < range_low THEN 'L'
                 END
     FROM dbo.OBSERVATION
     WHERE observation_concept_id = '3010813')v;


drop table #exposed_step4
SELECT * INTO #exposed_step4
FROM(
SELECT d.*, 
       vo.VISIT_START_DATE, 
       vo.VISIT_END_DATE
FROM
     #exposed_step1 d INNER JOIN
     dbo.VISIT_OCCURRENCE vo
     ON d.PERSON_ID = vo.PERSON_ID
    AND d.DRUG_EXPOSURE_START_DATE BETWEEN vo.VISIT_START_DATE AND vo.VISIT_END_DATE
)v

drop table #exposed_step5
select * into #exposed_step5 from (
select a.*,b.observation_date,value_as_number,fg from #exposed_step4 a inner join #exposed_step3 b on a.person_id=b.person_id and (b.observation_date > a.drug_exposure_start_date and b.observation_date<a.visit_end_date)
)v

select * into #exposed_step6 from (
select *,ROW_NUMBER() over (PARTITION by person_id,visit_start_date order by drug_exposure_start_date asc,value_as_number desc) as rn2 from #exposed_step5
) v

drop table #exposed_step7
select * into #exposed_step7 from (
select exposed=1,person_id,drug_exposure_start_date,visit_start_date,visit_end_date,fg from  #exposed_step6 where rn2=1
)v

select * from #exposed_step7
--non_exposed group 생성


SELECT * INTO #no_exposed1
FROM(
     SELECT *  FROM #exposed_step3 a
     WHERE NOT EXISTS(SELECT * FROM #exposed_step7 b WHERE a.person_id = b.person_id)
	)v;

drop table #no_exposed2
select * into #no_exposed2 from (

select a.*, vo.VISIT_START_DATE,vo.VISIT_END_DATE from #no_exposed1 a inner join  dbo.VISIT_OCCURRENCE vo
     ON cast(a.PERSON_ID as varchar(50)) = cast(vo.PERSON_ID as varchar(50))
    AND a.observation_date BETWEEN vo.VISIT_START_DATE AND vo.VISIT_END_DATE

) v

select * into #no_exposed3 from (
select *,ROW_NUMBER() over (PARTITION by person_id,VISIT_start_date order by value_as_number desc) as rn2 from #no_exposed2
) v

select * into #no_exposed4 from (
select exposed=0, person_id,drug_exposure_start_date=null ,visit_start_date,visit_end_date,fg from #no_exposed3 where rn2=1
)v
-- nonexposed 그룹 생성 완료
drop table #CLEAR1
select * into #CLEAR1 from (
select * from  (
select * from #exposed_step7
union
select * from #no_exposed4 ) a 
)v

select * into #CLEAR2 from (
select a.*,sex=case when p.Gender_concept_id=8507 then '1' else '0' end,year(visit_start_date)-p.YEAR_OF_BIRTH as age
from CLEAR1 a inner join  person p on a.person_id=p.person_id
) v
select count(*) from #CLEAR2 --193874
drop table #CLEAR3
select * into #CLEAR3 from (
select a.*,b.condition_concept_id,condition_start_date,ROW_NUMBER() over (PARTITION by a.person_id,visit_start_date order by condition_start_date) as rn from #CLEAR2 a inner join [CONDITION_OCCURRENCE] b on a.person_id=b.PERSON_ID and condition_start_date between visit_start_date and visit_end_date
)v

select * into #CLEAR4 from (
select * from #CLEAR3 where  rn=1)v

-- 노출군 비노출군 생성 완료

-- 자바를 이용하여 Exact 매칭 수행.

	private String ExactMatching(Connection connect, int nON_EXPOSURERATIO, String szTblNmForAnalysis_FL) throws SQLException {
		// TODO Auto-generated method stub
		

		System.out.println("매칭진행중");
		Statement stmt=connect.createStatement();
		String szQry="";
		
		
		
		String tblname=szTblNmForAnalysis_FL+"_tmp";
		
		DeleteExistTable(connect,tblname);
		
		//매칭되는 케이스 전부. tblname 변수에 IDX들이 저장됨.
		//meddept: 입원시 부서, deptcode: 퇴원진단을 내린 부서.
		szQry="select *,identity(int, 1,1) as idx2 into "+tblname+" from ("+
		"select a.idx as ex,b.idx as non_ex, flag=0 from " +
		"(select * from "+szTblNmForAnalysis_FL+" where treated=1) a," +
		"(select * from "+szTblNmForAnalysis_FL+" where treated=0) b " +
	
		" where a.diagcode=b.diagcode and a.age between b.age-1 and b.age+1 and a.meddept=b.meddept and a.sex=b.sex "+
	
		")v";
		
		System.out.println("P10");
		stmt.execute(szQry);
		
		szQry="CREATE INDEX "+tblname+"_idx ON "+tblname+"(ex,non_ex)";
		stmt.execute(szQry);
					
		
		ResultSet rs=null;
		//노출군 건수 가지고 오기 
		szQry="select count(distinct ex) from "+ tblname;
						
		rs = stmt.executeQuery(szQry);
		rs.next();
	    int ex_cnt=rs.getInt(1);
	    			    
	 
	    
	    String []idx2 = new String[ex_cnt*nON_EXPOSURERATIO];
	    String []selected_nonexposeid = new String[ex_cnt*nON_EXPOSURERATIO];
	    
	    
	    //DeleteExistTempTable("#a_selecteidx");
	
boolean cmt=true;
	    
	    String a_selecteidx=tblname+"_selectidx";
	    try{
	    
	    DeleteExistTable(connect,a_selecteidx);
	 
	    	 stmt.execute("CREATE TABLE "+a_selecteidx+"("+
			"[selectedidx] [int] NULL ,"+
			"[ex_id] [int] NULL ,"+
			"[non_id] [int] NULL)");
	    	 System.out.println("a_selecteIdx 테이블 부재하여 생성");
		    
	    
	    
	    }catch(SQLException se){
			   System.out.println(se);
			   
		  }
	    
	    szQry="select distinct ex from "+ tblname+" order by ex";
		rs = stmt.executeQuery(szQry);
						
		int exposeid=0;
		String szQry2=null;
		int acnt=0;

		
		Statement stmt2=null;							
		stmt2=connect.createStatement();
		ResultSet rs2=null;
		
		Statement stmt3=null;							
		
		stmt3=connect.createStatement();
		ResultSet rs3=null;
		
		
		
		while(rs.next())
		{
			exposeid=rs.getInt(1);
			
			szQry2="select * from "+tblname+" a where ex="+exposeid+" and not exists (select distinct non_id from "+a_selecteidx+" b where a.non_ex=b.non_id ) order by newid()";
			
			rs2=stmt2.executeQuery(szQry2);
		

			int machtednumber =0;
			while(rs2.next())
			{
				
			//	System.out.println("P12");
				String non_ex=rs2.getString(2);
				//비노출군이 추출된 적이 있는지 비교
				if(machtednumber==nON_EXPOSURERATIO)
				{
				//System.out.println("P13");
					break;
				}
				

				idx2[acnt]=rs2.getString(4);
				selected_nonexposeid[acnt]=rs2.getString(2);								
				acnt++;
				machtednumber++;
				stmt3.execute("insert into "+a_selecteidx+" values("+rs2.getInt(4)+","+rs2.getInt(1)+","+rs2.getInt(2)+")");
				
				
			}
			

			
		}
		



--R을 이용하여 통계 분석 수행.
library(RODBC)
library(epiR)
library(survival)

mydata=sqlQuery(conn<-odbcConnect('ODBC연결설정'),
                        "select exposed as DRUG ,fg as ADR,groups as stratum  from szfullAnlysisTbName")
matched <-clogit(ADR ~ Drug + strata(stratum), data=mydata)
summary(matched)
after_matching<-matched$DRUG 
tbl<-table(matched$DRUG,matched$ADR); // 매칭된 후exposed,nonexposed



--=============================================================
--CERT ALGORITHM IN OMOP CDM. 2015.09
--=============================================================
 ATC 코드를 기준으로 타겟약물을 투여한 입원환자의 약물투여 전후비교
 숫자형 검사수치 MAX값 t-test
 비정상 유무 McNemar test
--------------------------------------------------------------------------
-- 1. Target Drug Exposure Table 생성: MED_VISIT
--------------------------------------------------------------------------

IF OBJECT_ID('MED_VISIT','U') IS NOT NULL
DROP TABLE MED_VISIT

WITH
atc (atc_concept_id) 
AS (SELECT concept_id FROM concept WHERE concept_code='Target ATC 코드입력')
,--ATC 코드에대한 OMOP Concept ID 확인

drug (drug_concept_id) 
AS (SELECT descendant_concept_id 
FROM concept_ancestor 
WHERE ancestor_concept_id IN (SELECT atc_concept_id FROM atc))
,--해당 ATC 코드의 Child drug의 OMOP Concept ID 추출

medication (person_id,visit_occurrence_id,drug_exposure_start_date,drug_exposure_end_date)
AS (SELECT person_id,visit_occurrence_id,drug_exposure_start_date,drug_exposure_end_date
FROM drug_exposure
WHERE drug_type_concept_id='38000180' 
AND drug_concept_id IN (SELECT drug_concept_id FROM drug))
,--Target drug을 처방받은 입원환자(omop_concept_id=38000180)의 약물 노출기록 추출

visit (visit_occurrence_id,person_id,visit_start_date,visit_end_date)
AS (SELECT visit_occurrence_id,person_id,visit_start_date,visit_end_date
FROM visit_occurrence
WHERE place_of_service_concept_id='9201' 
AND visit_occurrence_id IN (SELECT visit_occurrence_id FROM medication))
,--약물 처방을 받은 입원(omop_concept_id=9201)기간 기록 추출

med_visit (person_id,visit_occurrence_id,visit_start_date,visit_end_date,drug_exposure_first_date,drug_exposure_last_date)
AS (SELECT A.person_id,A.visit_occurrence_id,A.visit_start_date,A.visit_end_date,MIN(B.drug_exposure_start_date),
MAX(B.drug_exposure_end_date)
FROM visit A INNER JOIN medication B
ON A.visit_occurrence_id=B.visit_occurrence_id
GROUP BY A.person_id,A.visit_occurrence_id,A.visit_start_date,A.visit_end_date) 
--약물처방을 받은 환자의 입원 기간 내에서 최초처방일, 최후노출일 기록

SELECT person_id,visit_occurrence_id,visit_start_date,visit_end_date,drug_exposure_first_date,drug_exposure_last_date,
predate=DATEDIFF(D,visit_start_date,drug_exposure_first_date),
postdate=CASE WHEN (visit_end_date<drug_exposure_last_date) 
THEN DATEDIFF(D,drug_exposure_first_date,visit_end_date) 
ELSE DATEDIFF(D,drug_exposure_first_date,drug_exposure_last_date) END
INTO MED_VISIT
FROM med_visit 
ORDER BY person_id,visit_start_date,visit_end_date


--------------------------------------------------------------------------
-- 2. Target Lab-test 포함Table 생성: LAB_BEFAFT
--------------------------------------------------------------------------

IF OBJECT_ID('LAB_BEFAFT','U') IS NOT NULL
DROP TABLE LAB_BEFAFT

WITH
labtest (observation_id,person_id,observation_concept_id,visit_occurrence_id,
observation_date,value_as_number,range_low,range_high,fg)
AS (SELECT observation_id,person_id,observation_concept_id,visit_occurrence_id,
observation_date,value_as_number,range_low,range_high,
CASE WHEN(value_as_number BETWEEN range_low AND range_high) THEN 'N'
WHEN(value_as_number > range_high) THEN 'H'
WHEN(value_as_number < range_low) THEN 'L' END
FROM observation
WHERE visit_occurrence_id IN (SELECT visit_occurrence_id FROM sooyeon_cert.dbo.med_visit)
AND observation_concept_id IN ('검사OMOP Concept ID 1','검사OMOP Concept ID 2','...... (반복)'))
,--환자의 Target 검사결과 추출

before (visit_occurrence_id,observation_date,value_as_number,fg)
AS (SELECT A.visit_occurrence_id,observation_date,value_as_number,fg
FROM labtest A, sooyeon_cert.dbo.MED_VISIT B
WHERE A.visit_occurrence_id=B.visit_occurrence_id AND A.observation_date <= B.drug_exposure_first_date)
,--약물투여전 입원기간 중의 검사수치 테이블

after (visit_occurrence_id,observation_date,value_as_number,fg)
AS (SELECT A.visit_occurrence_id,observation_date,value_as_number,fg
FROM labtest A, sooyeon_cert.dbo.MED_VISIT B
WHERE A.visit_occurrence_id=B.visit_occurrence_id AND A.observation_date > B.drug_exposure_first_date)
--약물투여후 입원기간 중의 검사수치 테이블

SELECT A.visit_occurrence_id,
CAST(MAX(A.value_as_number) AS FLOAT) before_max_value,
CAST(MAX(B.value_as_number) AS FLOAT) after_max_value,
befor_ubnormalyn= CASE WHEN MAX(A.fg)='N' THEN 0 ELSE 1 END,
after_ubnormalyn= CASE WHEN MAX(B.fg)='N' THEN 0 ELSE 1 END
INTO LAB_BEFAFT
FROM before A, after B
WHERE A.visit_occurrence_id=B.visit_occurrence_id
AND A.value_as_number IS NOT NULL AND B.value_as_number IS NOT NULL
GROUP BY A.visit_occurrence_id


--------------------------------------------------------------------------
-- 3. Mcnemar's 분석용Table 생성: McnemarCount
--------------------------------------------------------------------------

IF OBJECT_ID('McnemarCount','U') IS NOT NULL
DROP TABLE McnemarCount

SELECT befor_ubnormalyn, after_ubnormalyn, count(*) frequency
INTO McnemarCount 
FROM lab_befaft 
GROUP BY befor_ubnormalyn, after_ubnormalyn



--------------------------------------------------------------------------
-- R을이용하여통계분석수행
--------------------------------------------------------------------------

--1. t-test
install.packages("RODBC")
library(RODBC)

mydata=sqlQuery(conn<-odbcConnect('odbc 연결설정'),
                "select before_max_value, after_max_value, befor_ubnormalyn,after_ubnormalyn from lab_befaft")
odbcClose(conn)
t.test(mydata$before_max_value, mydata$after_max_value,paired=TRUE, conf.level=0.95)


--2. McNemar's Test
count.data<-sqlQuery(conn<-odbcConnect('odbc 연결설정'),
              "select * from McnemarCount")
odbcClose(conn)
test.data<-matrix(a[,3], ncol=2,byrow=T, dimnames=list("before" = c("normal","ubnormal"),
                                                    "after" = c("normal","ubnormal")))
mcnemar.test(test.data)



